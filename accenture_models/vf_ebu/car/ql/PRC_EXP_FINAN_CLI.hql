USE VF_EBU;

set mapred.job.name = WORK_FINANCIACION_HIST;
DROP TABLE WORK.WORK_FINANCIACION_HIST;
CREATE TABLE WORK.WORK_FINANCIACION_HIST AS 
SELECT
A.NIF,
A.MSISDN,
A.STATUS,
A.FECHA_OPERACION,
CAST(A.IMPORTE_APLAZAMIENTO AS DOUBLE) AS IMPORTE_APLAZAMIENTO,
A.FECHA_VENCIMIENTO,
A.FECHA_ABONO_CUOTA,
A.NDOC_COMPENSACION,
CAST(A.IMPORTE_CUOTA  AS DOUBLE) AS IMPORTE_CUOTA,
CAST(A.NPOSICION AS DOUBLE) AS NPOSICION,
A.TIPO_OPERACION,
A.PARTITIONED_MONTH,
CASE WHEN A.TIPO_OPERACION LIKE 'D' THEN 1 ELSE 0 END AS IND_DEVOLUCION,
CASE WHEN A.TIPO_OPERACION LIKE 'C' THEN 1 ELSE 0 END AS IND_CANCELACION,
CASE WHEN A.TIPO_OPERACION LIKE 'J' THEN 1 ELSE 0 END AS IND_CANJE,
CASE WHEN A.TIPO_OPERACION LIKE 'A' THEN 1 ELSE 0 END AS IND_ALTA,
CASE WHEN A.STATUS LIKE 'P' THEN 1 ELSE 0 END AS IND_PENDIENTE,
CASE WHEN A.STATUS LIKE 'E' THEN 1 ELSE 0 END AS IND_ERRONEO,
CASE WHEN A.STATUS LIKE 'C' THEN 1 ELSE 0 END AS IND_COMPLETADO,
CASE WHEN A.STATUS LIKE 'F' THEN 1 ELSE 0 END AS IND_FINALIZADO
FROM
(SELECT * FROM INPUT.VF_EBU_EMP_FINANCIACION WHERE PARTITIONED_MONTH = '${hiveconf:MONTH0}') A
WHERE A.FECHA_OPERACION < CONCAT('${hiveconf:MONTH0}','40') AND LENGTH(TRIM(A.FECHA_OPERACION))>0;


set mapred.job.name = WORK_BASE_FINAN;
DROP TABLE WORK.WORK_BASE_FINAN;
CREATE TABLE WORK.WORK_BASE_FINAN AS 
SELECT
MSISDN,
FECHA_OPERACION,
MAX(IND_DEVOLUCION) AS IND_DEVOLUCION,
MAX(IND_CANCELACION) AS IND_CANCELACION,
MAX(IND_CANJE) AS IND_CANJE,
MAX(IND_ALTA) AS IND_ALTA,
MAX(IND_PENDIENTE) AS IND_PENDIENTE,
MAX(IND_ERRONEO) AS IND_ERRONEO,
MAX(IND_COMPLETADO) AS IND_COMPLETADO,
MAX(IND_FINALIZADO) AS IND_FINALIZADO
FROM
WORK.WORK_FINANCIACION_HIST
GROUP BY MSISDN, FECHA_OPERACION;


set mapred.job.name = WORK_FINAN_ESTADO;
DROP TABLE WORK.WORK_FINAN_ESTADO;
CREATE TABLE WORK.WORK_FINAN_ESTADO AS  
SELECT 
MSISDN,
COUNT(*) AS NUM_FINANCIACIONES_HIST,

SUM(IND_PENDIENTE) AS NUM_FINAN_PENDIENTES,
SUM(IND_ERRONEO) AS NUM_FINAN_ERRONEAS,
SUM(IND_DEVOLUCION) AS NUM_FINAN_DEVOLUCIONES,
SUM(IND_CANCELACION) AS NUM_FINAN_CANCELACIONES,
SUM(IND_FINALIZADO) AS NUM_FINAN_FINALIZADAS,
SUM(CASE WHEN IND_COMPLETADO > 0 AND IND_FINALIZADO = 0 THEN 1 ELSE 0 END) AS NUM_FINAN_ACTIVAS,

MAX(IND_PENDIENTE) AS IND_FINAN_PENDIENTES,
MAX(IND_ERRONEO) AS IND_FINAN_ERRONEAS,
MAX(IND_DEVOLUCION) AS IND_FINAN_DEVOLUCIONES,
MAX(IND_CANCELACION) AS IND_FINAN_CANCELACIONES,
MAX(IND_FINALIZADO) AS IND_FINAN_FINALIZADAS,
MAX(CASE WHEN IND_COMPLETADO > 0 AND IND_FINALIZADO = 0 THEN 1 ELSE 0 END) AS IND_FINAN_ACTIVAS,

SUM(IND_PENDIENTE) / COUNT(*) AS NUM_PCT_FINAN_PENDIENTES,
SUM(IND_ERRONEO) / COUNT(*) AS NUM_PCT_FINAN_ERRONEAS,
SUM(IND_DEVOLUCION) / COUNT(*) AS NUM_PCT_FINAN_DEVOLUCIONES,
SUM(IND_CANCELACION) / COUNT(*) AS NUM_PCT_FINAN_CANCELACIONES,
SUM(IND_FINALIZADO) / COUNT(*) AS NUM_PCT_FINAN_FINALIZADAS,
SUM(CASE WHEN IND_COMPLETADO > 0 AND IND_FINALIZADO = 0 THEN 1 ELSE 0 END) / COUNT(*) AS NUM_PCT_FINAN_ACTIVAS

FROM WORK.WORK_BASE_FINAN
GROUP BY MSISDN;

------------------------------------------
--Msisdn con una financiacion activa
set mapred.job.name = WORK_MONO_FINAN_ACT;
DROP TABLE WORK.WORK_MONO_FINAN_ACT;
CREATE TABLE WORK.WORK_MONO_FINAN_ACT AS
SELECT
C.* FROM
(SELECT * FROM WORK.WORK_BASE_FINAN WHERE IND_COMPLETADO > 0 AND IND_FINALIZADO = 0) A
INNER JOIN
(SELECT DISTINCT MSISDN FROM WORK.WORK_FINAN_ESTADO WHERE NUM_FINANCIACIONES_HIST = 1) B
ON A.MSISDN = B.MSISDN
INNER JOIN
WORK.WORK_FINANCIACION_HIST C
ON A.MSISDN = C.MSISDN AND A.FECHA_OPERACION = C.FECHA_OPERACION;

--Msisdn con varias financiaciones activas
set mapred.job.name = WORK_MULTI_FINAN_ACT;
DROP TABLE WORK.WORK_MULTI_FINAN_ACT;
CREATE TABLE WORK.WORK_MULTI_FINAN_ACT AS
SELECT
C.* FROM
(SELECT * FROM WORK.WORK_BASE_FINAN WHERE IND_COMPLETADO > 0 AND IND_FINALIZADO = 0) A
INNER JOIN
(SELECT DISTINCT MSISDN FROM WORK.WORK_FINAN_ESTADO WHERE NUM_FINANCIACIONES_HIST > 1) B
ON A.MSISDN = B.MSISDN
INNER JOIN
WORK.WORK_FINANCIACION_HIST C
ON A.MSISDN = C.MSISDN AND A.FECHA_OPERACION = C.FECHA_OPERACION;


set mapred.job.name = WORK_BASE_CUOTAS_AUX;
DROP TABLE WORK.WORK_BASE_CUOTAS_AUX;
CREATE TABLE WORK.WORK_BASE_CUOTAS_AUX AS 
SELECT NIF, MSISDN, FECHA_OPERACION, 
MAX(NPOSICION) AS NUM_CUOTAS_TOT,
MAX(IMPORTE_APLAZAMIENTO) AS NUM_CANTIDAD_FINANCIADA,
MAX(IMPORTE_CUOTA) AS NUM_CUOTA_MENSUAL,
MAX(SUBSTR(CASE WHEN (FECHA_ABONO_CUOTA < CONCAT('${hiveconf:MONTH0}','40')) AND LENGTH(TRIM(FECHA_ABONO_CUOTA))>0  THEN FECHA_ABONO_CUOTA ELSE '' END,1,6)) AS MES_ULTIMO_PAGO,
MAX(VF_FUNC.TO_DATE(CONCAT(SUBSTR(FECHA_VENCIMIENTO,1,4),'-',SUBSTR(FECHA_VENCIMIENTO,5,2),'-01'))) AS FECHA_PAGO_FINAL,
VF_FUNC.TO_DATE(CONCAT(SUBSTR('${hiveconf:MONTH0}',1,4),'-',SUBSTR('${hiveconf:MONTH0}',5,2),'-01')) AS ANIO_MES_DIA_ACTUAL
FROM WORK.WORK_MONO_FINAN_ACT
GROUP BY NIF,MSISDN, FECHA_OPERACION;


set mapred.job.name = WORK_BASE_CUOTAS_AUX2;
DROP TABLE WORK.WORK_BASE_CUOTAS_AUX2;
CREATE TABLE WORK.WORK_BASE_CUOTAS_AUX2 AS 
SELECT
A.*,
B.NUM_CUOTAS_TOT,
B.NUM_CANTIDAD_FINANCIADA,
B.NUM_CUOTA_MENSUAL,
CASE WHEN B.MES_ULTIMO_PAGO = SUBSTR(A.FECHA_ABONO_CUOTA,1,6) THEN A.NPOSICION ELSE 0 END
AS NUM_ULTIMA_CUOTA_PAGADA,
CASE WHEN 
ABS(YEAR(ANIO_MES_DIA_ACTUAL)-YEAR(B.FECHA_PAGO_FINAL)) = 0 
THEN 
ABS(MONTH(B.FECHA_PAGO_FINAL)-MONTH(ANIO_MES_DIA_ACTUAL)) 
ELSE 
(13-MONTH(B.FECHA_PAGO_FINAL))+(MONTH(ANIO_MES_DIA_ACTUAL)-1) +
(ABS(YEAR(ANIO_MES_DIA_ACTUAL)-YEAR(B.FECHA_PAGO_FINAL))-1)*12
END AS NUM_MESES_FIN_FINANCIACION
FROM
WORK.WORK_MONO_FINAN_ACT A
INNER JOIN
WORK.WORK_BASE_CUOTAS_AUX B
ON A.NIF = B.NIF AND A.MSISDN = B.MSISDN AND A.FECHA_OPERACION = B.FECHA_OPERACION;


set mapred.job.name = WORK_BASE_CUOTAS;
DROP TABLE WORK.WORK_BASE_CUOTAS;
CREATE TABLE WORK.WORK_BASE_CUOTAS AS 
SELECT
A.NIF AS NIF, 
A.MSISDN AS MSISDN, 
A.FECHA_OPERACION AS FECHA_OPERACION,
MAX(A.NUM_CUOTAS_TOT) AS NUM_CUOTAS_TOT,
MAX(A.NUM_CANTIDAD_FINANCIADA) AS NUM_CANTIDAD_FINANCIADA,
MAX(A.NUM_CUOTA_MENSUAL) AS NUM_CUOTA_MENSUAL,
MAX(A.NUM_ULTIMA_CUOTA_PAGADA) AS NUM_ULTIMA_CUOTA_PAGADA,
MAX(A.NUM_MESES_FIN_FINANCIACION) AS NUM_MESES_FIN_FINANCIACION
FROM
WORK.WORK_BASE_CUOTAS_AUX2 A
GROUP BY A.NIF, A.MSISDN, A.FECHA_OPERACION;


set mapred.job.name = WORK_FINAN_CUOTAS_FINAL;
DROP TABLE WORK.WORK_FINAN_CUOTAS_FINAL;
CREATE TABLE WORK.WORK_FINAN_CUOTAS_FINAL AS 
SELECT  
NIF, MSISDN, FECHA_OPERACION,
NUM_CANTIDAD_FINANCIADA,
NUM_CUOTA_MENSUAL,
NUM_MESES_FIN_FINANCIACION,
NUM_CUOTAS_TOT,
NUM_ULTIMA_CUOTA_PAGADA AS NUM_CUOTAS_PAGADAS,
CASE WHEN NUM_ULTIMA_CUOTA_PAGADA > NUM_CUOTAS_TOT THEN 0 ELSE
(NUM_CUOTAS_TOT - NUM_ULTIMA_CUOTA_PAGADA) END AS NUM_CUOTAS_PENDIENTES,

NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL AS NUM_IMPORTE_PAGADO,
CASE WHEN (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) > NUM_CANTIDAD_FINANCIADA THEN 1 ELSE
(NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) / NUM_CANTIDAD_FINANCIADA END AS NUM_PCT_IMPORTE_PAGADO,

CASE WHEN (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) > NUM_CANTIDAD_FINANCIADA THEN 0 ELSE
NUM_CANTIDAD_FINANCIADA - (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) END AS NUM_IMPORTE_RESTANTE,

CASE WHEN (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) > NUM_CANTIDAD_FINANCIADA THEN 0 ELSE
(NUM_CANTIDAD_FINANCIADA - (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL)) / 
NUM_CANTIDAD_FINANCIADA END AS NUM_PCT_IMPORTE_RESTANTE

FROM WORK.WORK_BASE_CUOTAS;


set mapred.job.name = WORK_BASE_CUOTAS_MULT_AUX;
DROP TABLE WORK.WORK_BASE_CUOTAS_MULT_AUX;
CREATE TABLE WORK.WORK_BASE_CUOTAS_MULT_AUX AS 
SELECT
A.*,
B.NUM_CUOTAS_TOT,
B.NUM_CANTIDAD_FINANCIADA,
B.NUM_CUOTA_MENSUAL,
CASE WHEN B.MES_ULTIMO_PAGO = SUBSTR(A.FECHA_ABONO_CUOTA,1,6) THEN NPOSICION ELSE 0 END
AS NUM_ULTIMA_CUOTA_PAGADA,
CASE WHEN 
ABS(YEAR(ANIO_MES_DIA_ACTUAL)-YEAR(B.FECHA_PAGO_FINAL)) = 0 
THEN 
ABS(MONTH(B.FECHA_PAGO_FINAL)-MONTH(ANIO_MES_DIA_ACTUAL)) 
ELSE 
(13-MONTH(B.FECHA_PAGO_FINAL))+(MONTH(ANIO_MES_DIA_ACTUAL)-1) +
(ABS(YEAR(ANIO_MES_DIA_ACTUAL)-YEAR(B.FECHA_PAGO_FINAL))-1)*12
END AS NUM_MESES_FIN_FINANCIACION
FROM
WORK.WORK_MULTI_FINAN_ACT A
INNER JOIN
(SELECT NIF, MSISDN, FECHA_OPERACION, 
MAX(NPOSICION) AS NUM_CUOTAS_TOT,
MAX(IMPORTE_APLAZAMIENTO) AS NUM_CANTIDAD_FINANCIADA,
MAX(IMPORTE_CUOTA) AS NUM_CUOTA_MENSUAL,
MAX(SUBSTR(CASE WHEN (FECHA_ABONO_CUOTA < CONCAT('${hiveconf:MONTH0}','40')) AND LENGTH(TRIM(FECHA_ABONO_CUOTA))>0 THEN FECHA_ABONO_CUOTA ELSE '' END,1,6)) AS MES_ULTIMO_PAGO,
MAX(VF_FUNC.TO_DATE(CONCAT(SUBSTR(FECHA_VENCIMIENTO,1,4),'-',SUBSTR(FECHA_VENCIMIENTO,5,2),'-01'))) AS FECHA_PAGO_FINAL,
VF_FUNC.TO_DATE(CONCAT(SUBSTR('${hiveconf:MONTH0}',1,4),'-',SUBSTR('${hiveconf:MONTH0}',5,2),'-01')) AS ANIO_MES_DIA_ACTUAL
FROM WORK.WORK_MULTI_FINAN_ACT
GROUP BY NIF,MSISDN, FECHA_OPERACION) B
ON A.NIF = B.NIF AND A.MSISDN = B.MSISDN AND A.FECHA_OPERACION = B.FECHA_OPERACION;


set mapred.job.name = WORK_BASE_CUOTAS_MULT;
DROP TABLE WORK.WORK_BASE_CUOTAS_MULT;
CREATE TABLE WORK.WORK_BASE_CUOTAS_MULT AS    
SELECT
A.NIF AS NIF, 
A.MSISDN AS MSISDN, 
A.FECHA_OPERACION AS FECHA_OPERACION,
MAX(A.NUM_CUOTAS_TOT) AS NUM_CUOTAS_TOT,
MAX(A.NUM_CANTIDAD_FINANCIADA) AS NUM_CANTIDAD_FINANCIADA,
MAX(A.NUM_CUOTA_MENSUAL) AS NUM_CUOTA_MENSUAL,
MAX(A.NUM_ULTIMA_CUOTA_PAGADA) AS NUM_ULTIMA_CUOTA_PAGADA,
MAX(A.NUM_MESES_FIN_FINANCIACION) AS NUM_MESES_FIN_FINANCIACION
FROM WORK.WORK_BASE_CUOTAS_MULT_AUX A
GROUP BY A.NIF, A.MSISDN, A.FECHA_OPERACION;

set mapred.job.name = WORK_FINAN_CUOTAS_FINAL_MULT;
DROP TABLE WORK.WORK_FINAN_CUOTAS_FINAL_MULT;
CREATE TABLE WORK.WORK_FINAN_CUOTAS_FINAL_MULT AS    
SELECT  
NIF, MSISDN, FECHA_OPERACION,
NUM_CANTIDAD_FINANCIADA,
NUM_CUOTA_MENSUAL,
NUM_MESES_FIN_FINANCIACION,
NUM_CUOTAS_TOT,
NUM_ULTIMA_CUOTA_PAGADA AS NUM_CUOTAS_PAGADAS,
CASE WHEN NUM_ULTIMA_CUOTA_PAGADA > NUM_CUOTAS_TOT THEN 0 ELSE
(NUM_CUOTAS_TOT - NUM_ULTIMA_CUOTA_PAGADA) END AS NUM_CUOTAS_PENDIENTES,

NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL AS NUM_IMPORTE_PAGADO,
CASE WHEN (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) > NUM_CANTIDAD_FINANCIADA THEN 1 ELSE
(NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) / NUM_CANTIDAD_FINANCIADA END AS NUM_PCT_IMPORTE_PAGADO,

CASE WHEN (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) > NUM_CANTIDAD_FINANCIADA THEN 0 ELSE
NUM_CANTIDAD_FINANCIADA - (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) END AS NUM_IMPORTE_RESTANTE,

CASE WHEN (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL) > NUM_CANTIDAD_FINANCIADA THEN 0 ELSE
(NUM_CANTIDAD_FINANCIADA - (NUM_ULTIMA_CUOTA_PAGADA * NUM_CUOTA_MENSUAL)) / 
NUM_CANTIDAD_FINANCIADA END AS NUM_PCT_IMPORTE_RESTANTE

FROM WORK.WORK_BASE_CUOTAS_MULT;

set mapred.job.name = WORK_FINAN_CUOTAS_NIF;
DROP TABLE WORK.WORK_FINAN_CUOTAS_NIF;
CREATE TABLE WORK.WORK_FINAN_CUOTAS_NIF AS    
SELECT 
NIF,
MAX(NUM_CANTIDAD_FINANCIADA) AS NUM_CANTIDAD_FINANCIADA_MAX,
MAX(NUM_CUOTA_MENSUAL) AS NUM_CUOTA_MENSUAL_MAX,
MAX(NUM_MESES_FIN_FINANCIACION) AS NUM_MESES_FIN_FINANCIACION_MAX,
MAX(NUM_CUOTAS_TOT) AS NUM_CUOTAS_TOT_MAX,
MAX(NUM_CUOTAS_PAGADAS) AS NUM_CUOTAS_PAGADAS_MAX,
MAX(NUM_CUOTAS_PENDIENTES) AS NUM_CUOTAS_PENDIENTES_MAX,
MAX(NUM_IMPORTE_PAGADO) AS NUM_IMPORTE_PAGADO_MAX,
MAX(NUM_PCT_IMPORTE_PAGADO) AS NUM_PCT_IMPORTE_PAGADO_MAX,
MAX(NUM_IMPORTE_RESTANTE) AS NUM_IMPORTE_RESTANTE_MAX,
MAX(NUM_PCT_IMPORTE_RESTANTE) AS NUM_PCT_IMPORTE_RESTANTE_MAX,

MIN(NUM_CANTIDAD_FINANCIADA) AS NUM_CANTIDAD_FINANCIADA_MIN,
MIN(NUM_CUOTA_MENSUAL) AS NUM_CUOTA_MENSUAL_MIN,
MIN(NUM_MESES_FIN_FINANCIACION) AS NUM_MESES_FIN_FINANCIACION_MIN,
MIN(NUM_CUOTAS_TOT) AS NUM_CUOTAS_TOT_MIN,
MIN(NUM_CUOTAS_PAGADAS) AS NUM_CUOTAS_PAGADAS_MIN,
MIN(NUM_CUOTAS_PENDIENTES) AS NUM_CUOTAS_PENDIENTES_MIN,
MIN(NUM_IMPORTE_PAGADO) AS NUM_IMPORTE_PAGADO_MIN,
MIN(NUM_PCT_IMPORTE_PAGADO) AS NUM_PCT_IMPORTE_PAGADO_MIN,
MIN(NUM_IMPORTE_RESTANTE) AS NUM_IMPORTE_RESTANTE_MIN,
MIN(NUM_PCT_IMPORTE_RESTANTE) AS NUM_PCT_IMPORTE_RESTANTE_MIN

FROM
(SELECT A.* FROM
(SELECT A.* FROM WORK.WORK_FINAN_CUOTAS_FINAL_MULT A  UNION ALL SELECT B.* FROM WORK.WORK_FINAN_CUOTAS_FINAL B) A ) A
GROUP BY A.NIF;

  
-- SELECT A.*,
-- B.NUM_CANTIDAD_FINANCIADA_MIN,
-- B.NUM_CUOTA_MENSUAL_MIN,
-- B.NUM_MESES_FIN_FINANCIACION_MIN,
-- B.NUM_CUOTAS_TOT_MIN,
-- B.NUM_CUOTAS_PAGADAS_MIN,
-- B.NUM_CUOTAS_PENDIENTES_MIN,
-- B.NUM_IMPORTE_PAGADO_MIN,
-- B.NUM_PCT_IMPORTE_PAGADO_MIN,
-- B.NUM_IMPORTE_RESTANTE_MIN,
-- B.NUM_PCT_IMPORTE_RESTANTE_MIN
-- FROM 
-- (
-- SELECT
-- A.NIF,
-- MAX(A.NUM_CANTIDAD_FINANCIADA) AS NUM_CANTIDAD_FINANCIADA_MAX,
-- MAX(A.NUM_CUOTA_MENSUAL) AS NUM_CUOTA_MENSUAL_MAX,
-- MAX(A.NUM_MESES_FIN_FINANCIACION) AS NUM_MESES_FIN_FINANCIACION_MAX,
-- MAX(A.NUM_CUOTAS_TOT) AS NUM_CUOTAS_TOT_MAX,
-- MAX(A.NUM_CUOTAS_PAGADAS) AS NUM_CUOTAS_PAGADAS_MAX,
-- MAX(A.NUM_CUOTAS_PENDIENTES) AS NUM_CUOTAS_PENDIENTES_MAX,
-- MAX(A.NUM_IMPORTE_PAGADO) AS NUM_IMPORTE_PAGADO_MAX,
-- MAX(A.NUM_PCT_IMPORTE_PAGADO) AS NUM_PCT_IMPORTE_PAGADO_MAX,
-- MAX(A.NUM_IMPORTE_RESTANTE) AS NUM_IMPORTE_RESTANTE_MAX,
-- MAX(A.NUM_PCT_IMPORTE_RESTANTE) AS NUM_PCT_IMPORTE_RESTANTE_MAX
-- FROM 
-- (SELECT * FROM WORK.WORK_FINAN_CUOTAS_FINAL_MULT)  A GROUP BY A.NIF
-- ) A LEFT JOIN (
-- SELECT B.NIF,
-- MIN(B.NUM_CANTIDAD_FINANCIADA) AS NUM_CANTIDAD_FINANCIADA_MIN,
-- MIN(B.NUM_CUOTA_MENSUAL) AS NUM_CUOTA_MENSUAL_MIN,
-- MIN(B.NUM_MESES_FIN_FINANCIACION) AS NUM_MESES_FIN_FINANCIACION_MIN,
-- MIN(B.NUM_CUOTAS_TOT) AS NUM_CUOTAS_TOT_MIN,
-- MIN(B.NUM_CUOTAS_PAGADAS) AS NUM_CUOTAS_PAGADAS_MIN,
-- MIN(B.NUM_CUOTAS_PENDIENTES) AS NUM_CUOTAS_PENDIENTES_MIN,
-- MIN(B.NUM_IMPORTE_PAGADO) AS NUM_IMPORTE_PAGADO_MIN,
-- MIN(B.NUM_PCT_IMPORTE_PAGADO) AS NUM_PCT_IMPORTE_PAGADO_MIN,
-- MIN(B.NUM_IMPORTE_RESTANTE) AS NUM_IMPORTE_RESTANTE_MIN,
-- MIN(B.NUM_PCT_IMPORTE_RESTANTE) AS NUM_PCT_IMPORTE_RESTANTE_MIN
-- FROM 
-- (SELECT * FROM WORK.WORK_FINAN_CUOTAS_FINAL ) B GROUP BY B.NIF) B
-- ON A.NIF=B.NIF;


set mapred.job.name = EMP_EXP_FINANCIACION_CLI;
DROP TABLE VF_EBU.EMP_EXP_FINANCIACION_CLI;
CREATE TABLE VF_EBU.EMP_EXP_FINANCIACION_CLI AS   
SELECT
A.NIF,
ROUND(A.NUM_FINANCIACIONES_HIST)  AS NUM_FINANCIACIONES_HIST,
ROUND(A.NUM_FINAN_PENDIENTES)  AS NUM_FINAN_PENDIENTES,
ROUND(A.NUM_FINAN_ERRONEAS)  AS NUM_FINAN_ERRONEAS,
ROUND(A.NUM_FINAN_DEVOLUCIONES)  AS NUM_FINAN_DEVOLUCIONES,
ROUND(A.NUM_FINAN_CANCELACIONES)  AS NUM_FINAN_CANCELACIONES,
ROUND(A.NUM_FINAN_FINALIZADAS)  AS NUM_FINAN_FINALIZADAS,
ROUND(A.NUM_FINAN_ACTIVAS)  AS NUM_FINAN_ACTIVAS,
A.IND_FINAN_PENDIENTES  AS IND_FINAN_PENDIENTES,
A.IND_FINAN_ERRONEAS  AS IND_FINAN_ERRONEAS,
A.IND_FINAN_DEVOLUCIONES  AS IND_FINAN_DEVOLUCIONES,
A.IND_FINAN_CANCELACIONES  AS IND_FINAN_CANCELACIONES,
A.IND_FINAN_FINALIZADAS  AS IND_FINAN_FINALIZADAS,
A.IND_FINAN_ACTIVAS  AS IND_FINAN_ACTIVAS,
ROUND(A.NUM_PCT_FINAN_PENDIENTES)  AS NUM_PCT_FINAN_PENDIENTES,
ROUND(A.NUM_PCT_FINAN_ERRONEAS)  AS NUM_PCT_FINAN_ERRONEAS,
ROUND(A.NUM_PCT_FINAN_DEVOLUCIONES)  AS NUM_PCT_FINAN_DEVOLUCIONES,
ROUND(A.NUM_PCT_FINAN_CANCELACIONES)  AS NUM_PCT_FINAN_CANCELACIONES,
ROUND(A.NUM_PCT_FINAN_FINALIZADAS)  AS NUM_PCT_FINAN_FINALIZADAS,
ROUND(A.NUM_PCT_FINAN_ACTIVAS)  AS NUM_PCT_FINAN_ACTIVAS,
ROUND(B.NUM_CANTIDAD_FINANCIADA_MAX) AS NUM_CANTIDAD_FINANCIADA_MAX,
ROUND(B.NUM_CUOTA_MENSUAL_MAX) AS NUM_CUOTA_MENSUAL_MAX,
ROUND(B.NUM_MESES_FIN_FINANCIACION_MAX) AS NUM_MESES_FIN_FINANCIACION_MAX,
ROUND(B.NUM_CUOTAS_TOT_MAX) AS NUM_CUOTAS_TOT_MAX,
ROUND(B.NUM_CUOTAS_PAGADAS_MAX) AS NUM_CUOTAS_PAGADAS_MAX,
ROUND(B.NUM_CUOTAS_PENDIENTES_MAX) AS NUM_CUOTAS_PENDIENTES_MAX,
ROUND(B.NUM_IMPORTE_PAGADO_MAX) AS NUM_IMPORTE_PAGADO_MAX,
ROUND(B.NUM_PCT_IMPORTE_PAGADO_MAX) AS NUM_PCT_IMPORTE_PAGADO_MAX,
ROUND(B.NUM_IMPORTE_RESTANTE_MAX) AS NUM_IMPORTE_RESTANTE_MAX,
ROUND(B.NUM_PCT_IMPORTE_RESTANTE_MAX) AS NUM_PCT_IMPORTE_RESTANTE_MAX,
ROUND(B.NUM_CANTIDAD_FINANCIADA_MIN) AS NUM_CANTIDAD_FINANCIADA_MIN,
ROUND(B.NUM_CUOTA_MENSUAL_MIN) AS NUM_CUOTA_MENSUAL_MIN,
ROUND(B.NUM_MESES_FIN_FINANCIACION_MIN) AS NUM_MESES_FIN_FINANCIACION_MIN,
ROUND(B.NUM_CUOTAS_TOT_MIN) AS NUM_CUOTAS_TOT_MIN,
ROUND(B.NUM_CUOTAS_PAGADAS_MIN) AS NUM_CUOTAS_PAGADAS_MIN,
ROUND(B.NUM_CUOTAS_PENDIENTES_MIN) AS NUM_CUOTAS_PENDIENTES_MIN,
ROUND(B.NUM_IMPORTE_PAGADO_MIN) AS NUM_IMPORTE_PAGADO_MIN,
ROUND(B.NUM_PCT_IMPORTE_PAGADO_MIN) AS NUM_PCT_IMPORTE_PAGADO_MIN,
ROUND(B.NUM_IMPORTE_RESTANTE_MIN) AS NUM_IMPORTE_RESTANTE_MIN,
ROUND(B.NUM_PCT_IMPORTE_RESTANTE_MIN) AS NUM_PCT_IMPORTE_RESTANTE_MIN
FROM
(SELECT
M.NIF,
SUM(A.NUM_FINANCIACIONES_HIST) AS NUM_FINANCIACIONES_HIST,
SUM(A.NUM_FINAN_PENDIENTES) AS NUM_FINAN_PENDIENTES,
SUM(A.NUM_FINAN_ERRONEAS) AS NUM_FINAN_ERRONEAS,
SUM(A.NUM_FINAN_DEVOLUCIONES) AS NUM_FINAN_DEVOLUCIONES,
SUM(A.NUM_FINAN_CANCELACIONES) AS NUM_FINAN_CANCELACIONES,
SUM(A.NUM_FINAN_FINALIZADAS) AS NUM_FINAN_FINALIZADAS,
SUM(A.NUM_FINAN_ACTIVAS) AS NUM_FINAN_ACTIVAS,
MAX(A.IND_FINAN_PENDIENTES) AS IND_FINAN_PENDIENTES,
MAX(A.IND_FINAN_ERRONEAS) AS IND_FINAN_ERRONEAS,
MAX(A.IND_FINAN_DEVOLUCIONES) AS IND_FINAN_DEVOLUCIONES,
MAX(A.IND_FINAN_CANCELACIONES) AS IND_FINAN_CANCELACIONES,
MAX(A.IND_FINAN_FINALIZADAS) AS IND_FINAN_FINALIZADAS,
MAX(A.IND_FINAN_ACTIVAS) AS IND_FINAN_ACTIVAS,
MAX(A.NUM_PCT_FINAN_PENDIENTES) AS NUM_PCT_FINAN_PENDIENTES,
MAX(A.NUM_PCT_FINAN_ERRONEAS) AS NUM_PCT_FINAN_ERRONEAS,
MAX(A.NUM_PCT_FINAN_DEVOLUCIONES) AS NUM_PCT_FINAN_DEVOLUCIONES,
MAX(A.NUM_PCT_FINAN_CANCELACIONES) AS NUM_PCT_FINAN_CANCELACIONES,
MAX(A.NUM_PCT_FINAN_FINALIZADAS) AS NUM_PCT_FINAN_FINALIZADAS,
MAX(A.NUM_PCT_FINAN_ACTIVAS) AS NUM_PCT_FINAN_ACTIVAS
FROM
(SELECT MSISDN, MAX(NIF) AS NIF FROM WORK.WORK_FINANCIACION_HIST GROUP BY MSISDN) M
INNER JOIN
WORK.WORK_FINAN_ESTADO A
ON M.MSISDN = A.MSISDN
GROUP BY M.NIF) A
LEFT JOIN
WORK.WORK_FINAN_CUOTAS_NIF B
ON A.NIF = B.NIF;

DROP TABLE WORK.WORK_FINANCIACION_HIST;
DROP TABLE WORK.WORK_BASE_FINAN;
DROP TABLE WORK.WORK_FINAN_ESTADO;
DROP TABLE WORK.WORK_MONO_FINAN_ACT;
DROP TABLE WORK.WORK_MULTI_FINAN_ACT;
DROP TABLE WORK.WORK_BASE_CUOTAS_AUX;
DROP TABLE WORK.WORK_BASE_CUOTAS_AUX2;
DROP TABLE WORK.WORK_BASE_CUOTAS;
DROP TABLE WORK.WORK_FINAN_CUOTAS_FINAL;
DROP TABLE WORK.WORK_BASE_CUOTAS_MULT_AUX;
DROP TABLE WORK.WORK_BASE_CUOTAS_MULT;
DROP TABLE WORK.WORK_FINAN_CUOTAS_FINAL_MULT;
DROP TABLE WORK.WORK_FINAN_CUOTAS_NIF;


EXIT;