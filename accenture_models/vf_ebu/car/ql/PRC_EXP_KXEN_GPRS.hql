USE VF_EBU;

set mapred.job.name = WORK_KXEN_GPRS_M0;
DROP TABLE WORK.WORK_KXEN_GPRS_M0;
CREATE TABLE WORK.WORK_KXEN_GPRS_M0 AS
SELECT
A.MSISDN,
SUM(NUM_KB_ROAMING_M0) AS NUM_KB_ROAMING_M0,
SUM(NUM_KB_DATOS_M0) AS NUM_KB_DATOS_M0
FROM
(SELECT
TELEFONO AS MSISDN,
(CASE WHEN MINROAMINGOUTGPRSWAP_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSWAP_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSINTERNET_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSINTERNET_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSINTRANET_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSINTRANET_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSMMS_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSMMS_M0  AS INT) END) AS NUM_KB_ROAMING_M0,
(CASE WHEN MINGPRSWAP_M0 IS NULL THEN 0 ELSE CAST(MINGPRSWAP_M0  AS INT) END) + 
(CASE WHEN MINGPRSINTERNET_M0 IS NULL THEN 0 ELSE CAST(MINGPRSINTERNET_M0  AS INT) END) + 
(CASE WHEN MINGPRSINTRANET_M0 IS NULL THEN 0 ELSE CAST(MINGPRSINTRANET_M0  AS INT) END)+
(CASE WHEN DATOS_4G_KB IS NULL THEN 0 ELSE CAST(DATOS_4G_KB  AS INT) END)AS NUM_KB_DATOS_M0 
FROM
INPUT.VF_KXEN_C_MA WHERE PARTITIONED_MONTH = '${hiveconf:MONTH0}') A
GROUP BY A.MSISDN;

set mapred.job.name = WORK_KXEN_GPRS_M1;
DROP TABLE WORK.WORK_KXEN_GPRS_M1;
CREATE TABLE WORK.WORK_KXEN_GPRS_M1 AS
SELECT
A.MSISDN,
SUM(NUM_KB_ROAMING_M0) AS NUM_KB_ROAMING_M1,
SUM(NUM_KB_DATOS_M0) AS NUM_KB_DATOS_M1
FROM
(SELECT
TELEFONO AS MSISDN,
(CASE WHEN MINROAMINGOUTGPRSWAP_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSWAP_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSINTERNET_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSINTERNET_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSINTRANET_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSINTRANET_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSMMS_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSMMS_M0  AS INT) END) AS NUM_KB_ROAMING_M0,
(CASE WHEN MINGPRSWAP_M0 IS NULL THEN 0 ELSE CAST(MINGPRSWAP_M0  AS INT) END) + 
(CASE WHEN MINGPRSINTERNET_M0 IS NULL THEN 0 ELSE CAST(MINGPRSINTERNET_M0  AS INT) END) + 
(CASE WHEN MINGPRSINTRANET_M0 IS NULL THEN 0 ELSE CAST(MINGPRSINTRANET_M0  AS INT) END)+
(CASE WHEN DATOS_4G_KB IS NULL THEN 0 ELSE CAST(DATOS_4G_KB  AS INT) END)AS NUM_KB_DATOS_M0 
FROM
INPUT.VF_KXEN_C_MA WHERE PARTITIONED_MONTH = '${hiveconf:MONTH1}') A
GROUP BY A.MSISDN;

set mapred.job.name = WORK_KXEN_GPRS_M2;
DROP TABLE WORK.WORK_KXEN_GPRS_M2;
CREATE TABLE WORK.WORK_KXEN_GPRS_M2 AS
SELECT
A.MSISDN,
SUM(NUM_KB_ROAMING_M0) AS NUM_KB_ROAMING_M2,
SUM(NUM_KB_DATOS_M0) AS NUM_KB_DATOS_M2
FROM
(SELECT
TELEFONO AS MSISDN,
(CASE WHEN MINROAMINGOUTGPRSWAP_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSWAP_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSINTERNET_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSINTERNET_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSINTRANET_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSINTRANET_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSMMS_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSMMS_M0  AS INT) END) AS NUM_KB_ROAMING_M0,
(CASE WHEN MINGPRSWAP_M0 IS NULL THEN 0 ELSE CAST(MINGPRSWAP_M0  AS INT) END) + 
(CASE WHEN MINGPRSINTERNET_M0 IS NULL THEN 0 ELSE CAST(MINGPRSINTERNET_M0  AS INT) END) + 
(CASE WHEN MINGPRSINTRANET_M0 IS NULL THEN 0 ELSE CAST(MINGPRSINTRANET_M0  AS INT) END)+
(CASE WHEN DATOS_4G_KB IS NULL THEN 0 ELSE CAST(DATOS_4G_KB  AS INT) END)AS NUM_KB_DATOS_M0 
FROM
INPUT.VF_KXEN_C_MA WHERE PARTITIONED_MONTH = '${hiveconf:MONTH2}') A
GROUP BY A.MSISDN;

set mapred.job.name = WORK_KXEN_GPRS_M3;
DROP TABLE WORK.WORK_KXEN_GPRS_M3;
CREATE TABLE WORK.WORK_KXEN_GPRS_M3 AS
SELECT
A.MSISDN,
SUM(NUM_KB_ROAMING_M0) AS NUM_KB_ROAMING_M3,
SUM(NUM_KB_DATOS_M0) AS NUM_KB_DATOS_M3
FROM
(SELECT
TELEFONO AS MSISDN,
(CASE WHEN MINROAMINGOUTGPRSWAP_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSWAP_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSINTERNET_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSINTERNET_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSINTRANET_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSINTRANET_M0  AS INT) END) + 
(CASE WHEN MINROAMINGOUTGPRSMMS_M0 IS NULL THEN 0 ELSE CAST(MINROAMINGOUTGPRSMMS_M0  AS INT) END) AS NUM_KB_ROAMING_M0,
(CASE WHEN MINGPRSWAP_M0 IS NULL THEN 0 ELSE CAST(MINGPRSWAP_M0  AS INT) END) + 
(CASE WHEN MINGPRSINTERNET_M0 IS NULL THEN 0 ELSE CAST(MINGPRSINTERNET_M0  AS INT) END) + 
(CASE WHEN MINGPRSINTRANET_M0 IS NULL THEN 0 ELSE CAST(MINGPRSINTRANET_M0  AS INT) END)+
(CASE WHEN DATOS_4G_KB IS NULL THEN 0 ELSE CAST(DATOS_4G_KB  AS INT) END)AS NUM_KB_DATOS_M0 
FROM
INPUT.VF_KXEN_C_MA WHERE PARTITIONED_MONTH = '${hiveconf:MONTH3}') A
GROUP BY A.MSISDN;

set mapred.job.name = WORK_KXEN_GPRS_TOT;
DROP TABLE WORK.WORK_KXEN_GPRS_TOT;
CREATE TABLE WORK.WORK_KXEN_GPRS_TOT AS
SELECT
M.CIF_NIF AS NIF,
M.MSISDN AS MSISDN,
CAST(A.NUM_KB_ROAMING_M0 AS DOUBLE) AS NUM_KB_ROAMING_M0,
CAST(A.NUM_KB_DATOS_M0 AS DOUBLE) AS NUM_KB_DATOS_M0,
CAST(B.NUM_KB_ROAMING_M1 AS DOUBLE) AS NUM_KB_ROAMING_M1,
CAST(B.NUM_KB_DATOS_M1 AS DOUBLE) AS NUM_KB_DATOS_M1,
CAST(C.NUM_KB_ROAMING_M2 AS DOUBLE) AS NUM_KB_ROAMING_M2,
CAST(C.NUM_KB_DATOS_M2 AS DOUBLE) AS NUM_KB_DATOS_M2,
CAST(D.NUM_KB_ROAMING_M3 AS DOUBLE) AS NUM_KB_ROAMING_M3,
CAST(D.NUM_KB_DATOS_M3 AS DOUBLE) AS NUM_KB_DATOS_M3
FROM
(SELECT * FROM INPUT.VF_EBU_AC_EMP_CARTERA_SERVICIO WHERE PARTITIONED_MONTH = '${hiveconf:MONTH0}') M
LEFT JOIN WORK.WORK_KXEN_GPRS_M0 A
ON M.MSISDN = A.MSISDN
LEFT JOIN WORK.WORK_KXEN_GPRS_M1 B
ON M.MSISDN = B.MSISDN
LEFT JOIN WORK.WORK_KXEN_GPRS_M2 C
ON M.MSISDN = C.MSISDN
LEFT JOIN WORK.WORK_KXEN_GPRS_M3 D
ON M.MSISDN = D.MSISDN;

--------------------------------------------------------------------------------
set mapred.job.name = EMP_EXP_KXEN_GPRS_LIN;
DROP TABLE VF_EBU.EMP_EXP_KXEN_GPRS_LIN;
CREATE TABLE VF_EBU.EMP_EXP_KXEN_GPRS_LIN AS
SELECT
NIF,
MSISDN,
'${hiveconf:MONTH0}' AS MES,

ROUND(CAST (NUM_KB_DATOS_M0)AS BIGINT) AS NUM_KB_DATOS_M0,
ROUND(CAST(VF_FUNC.AvgN(NUM_KB_DATOS_M0, NUM_KB_DATOS_M1, NUM_KB_DATOS_M2, NUM_KB_DATOS_M3), 2)AS BIGINT) AS NUM_KB_DATOS_AVG,
ROUND(CAST(VF_FUNC.IncN(NUM_KB_DATOS_M0, NUM_KB_DATOS_M1, NUM_KB_DATOS_M2, NUM_KB_DATOS_M3), 2)AS BIGINT)  AS NUM_KB_DATOS_INC,
ROUND(NUM_KB_ROAMING_M0) AS NUM_KB_ROAMING_M0,
ROUND(CAST(VF_FUNC.AvgN(NUM_KB_ROAMING_M0, NUM_KB_ROAMING_M1, NUM_KB_ROAMING_M2, NUM_KB_ROAMING_M3),2)AS BIGINT) AS NUM_KB_ROAMING_AVG,
ROUND(CAST(VF_FUNC.IncN(NUM_KB_ROAMING_M0, NUM_KB_ROAMING_M1, NUM_KB_ROAMING_M2, NUM_KB_ROAMING_M3),2)AS BIGINT)  AS NUM_KB_ROAMING_INC

FROM
WORK.WORK_KXEN_GPRS_TOT;

-----------------------------------------------------------------------

set mapred.job.name = WORK_KXEN_GPRS_TOT_1;
DROP TABLE WORK.WORK_KXEN_GPRS_TOT_1;
CREATE TABLE WORK.WORK_KXEN_GPRS_TOT_1 AS
SELECT
NIF,
SUM(NUM_KB_DATOS_M0) AS NUM_KB_DATOS_M0,
SUM(NUM_KB_ROAMING_M0) AS NUM_KB_ROAMING_M0,
SUM(NUM_KB_DATOS_M1) AS NUM_KB_DATOS_M1,
SUM(NUM_KB_ROAMING_M1) AS NUM_KB_ROAMING_M1,
SUM(NUM_KB_DATOS_M2) AS NUM_KB_DATOS_M2,
SUM(NUM_KB_ROAMING_M2) AS NUM_KB_ROAMING_M2,
SUM(NUM_KB_DATOS_M3) AS NUM_KB_DATOS_M3,
SUM(NUM_KB_ROAMING_M3) AS NUM_KB_ROAMING_M3
FROM WORK.WORK_KXEN_GPRS_TOT
GROUP BY NIF;

-----------------------------------------------------------------------

set mapred.job.name = EMP_EXP_KXEN_GPRS_CLI;
DROP TABLE VF_EBU.EMP_EXP_KXEN_GPRS_CLI;
CREATE TABLE VF_EBU.EMP_EXP_KXEN_GPRS_CLI AS
SELECT
NIF,
'${hiveconf:MONTH0}' AS MES,
ROUND(CAST (NUM_KB_DATOS_M0)AS BIGINT) AS NUM_KB_DATOS_M0,
ROUND(CAST(VF_FUNC.AvgN(NUM_KB_DATOS_M0, NUM_KB_DATOS_M1, NUM_KB_DATOS_M2, NUM_KB_DATOS_M3), 2)AS BIGINT) AS NUM_KB_DATOS_AVG,
ROUND(CAST(VF_FUNC.IncN(NUM_KB_DATOS_M0, NUM_KB_DATOS_M1, NUM_KB_DATOS_M2, NUM_KB_DATOS_M3), 2)AS BIGINT)  AS NUM_KB_DATOS_INC,
ROUND(NUM_KB_ROAMING_M0) AS NUM_KB_ROAMING_M0,
ROUND(CAST(VF_FUNC.AvgN(NUM_KB_ROAMING_M0, NUM_KB_ROAMING_M1, NUM_KB_ROAMING_M2, NUM_KB_ROAMING_M3),2)AS BIGINT) AS NUM_KB_ROAMING_AVG,
ROUND(CAST(VF_FUNC.IncN(NUM_KB_ROAMING_M0, NUM_KB_ROAMING_M1, NUM_KB_ROAMING_M2, NUM_KB_ROAMING_M3),2)AS BIGINT)  AS NUM_KB_ROAMING_INC
FROM WORK.WORK_KXEN_GPRS_TOT_1;

DROP TABLE WORK.WORK_KXEN_GPRS_M0;
DROP TABLE WORK.WORK_KXEN_GPRS_M1;
DROP TABLE WORK.WORK_KXEN_GPRS_M2;
DROP TABLE WORK.WORK_KXEN_GPRS_M3;
DROP TABLE WORK.WORK_KXEN_GPRS_M4;
DROP TABLE WORK.WORK_KXEN_GPRS_TOT;
DROP TABLE WORK.WORK_KXEN_GPRS_TOT_1; 
    
EXIT;